name: polysemy-test
synopsis: Polysemy effects for testing
version: 0.3.0.0
description: Please see the README on Github at <https://github.com/tek/polysemy-test>
license: BSD-2-Clause-Patent
license-file: LICENSE
author: "Torsten Schmits"
maintainer: "tek@tryp.io"
copyright: "2020 Torsten Schmits"
category: Test
build-type: Simple
extra-source-files:
  - README.md
  - Changelog.md

library:
  source-dirs: lib
  other-modules:
    - Prelude
  generated-exposed-modules:
    - Paths_polysemy_test

tests:
  polysemy-test-unit:
    main: Main.hs
    source-dirs: test
    ghc-options:
      - -threaded
      - -rtsopts
      - -with-rtsopts=-N
    dependencies:
      - name: polysemy-test
        mixin:
          - hiding (Polysemy.Test.Prelude)
          - (Polysemy.Test.Prelude as Prelude)
      - tasty

dependencies:
  - name: base
    version: '>= 4 && < 5'
    mixin:
      - hiding (Prelude)
  - containers
  - either
  - hedgehog ^>= 1.0.2
  - path ^>= 0.8
  - path-io ^>= 0.3.1
  - polysemy ^>= 1.3.0
  - polysemy-plugin ^>= 0.2.5
  - relude ^>= 0.7
  - string-interpolate ^>= 0.1
  - tasty ^>= 1.2.3
  - tasty-hedgehog ^>= 1
  - text
  - transformers

ghc-options:
  - -Wall
  - -fplugin=Polysemy.Plugin
  - -O2
  - -flate-specialise
  - -fspecialise-aggressively

default-extensions:
  - AllowAmbiguousTypes
  - ApplicativeDo
  - BangPatterns
  - BinaryLiterals
  - BlockArguments
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveAnyClass
  - DeriveDataTypeable
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveTraversable
  - DerivingStrategies
  - DisambiguateRecordFields
  - DoAndIfThenElse
  - DuplicateRecordFields
  - EmptyDataDecls
  - ExistentialQuantification
  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - GeneralizedNewtypeDeriving
  - InstanceSigs
  - KindSignatures
  - LambdaCase
  - LiberalTypeSynonyms
  - MultiParamTypeClasses
  - MultiWayIf
  - NamedFieldPuns
  - OverloadedStrings
  - OverloadedLists
  - PackageImports
  - PartialTypeSignatures
  - PatternGuards
  - PatternSynonyms
  - PolyKinds
  - QuantifiedConstraints
  - QuasiQuotes
  - RankNTypes
  - RecordWildCards
  - RecursiveDo
  - ScopedTypeVariables
  - StandaloneDeriving
  - TemplateHaskell
  - TupleSections
  - TypeApplications
  - TypeFamilies
  - TypeFamilyDependencies
  - TypeOperators
  - TypeSynonymInstances
  - UndecidableInstances
  - UnicodeSyntax
  - ViewPatterns
